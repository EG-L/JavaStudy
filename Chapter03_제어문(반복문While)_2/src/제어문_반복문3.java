/*
 *    변수 => 데이터형 , 식별자 (암기)
 *        => 한 개의 데이터를 저장하는 메모리 공간
 *           (저장된 영역은 변경해서 다시 저장이 가능)
 *        => 변수 기능( 읽기(값 가지고 온다) / 쓰기(메모리에 저장, 수정) )
 *        => 변수 저장하기 위해서는 먼저 메모리 크기 결정
 *           --------------------------------
 *                                    |
 *                                   기본형(데이터형)
 *                                   참조형(사용자정의) : 배열, 클래스
 *        => 기본형
 *           정수
 *            byte(1byte)
 *            short(2byte)
 *            int(4byte)
 *            long(8byte)
 *            ----------------- 구분 (L(l))
 *            100L =>
 *            => 컴퓨터가 인식하는 모든 숫자는 int(default)
 *           실수
 *            float(4byte)
 *            double(8byte) => 소수점 이하 15자리 (default)
 *           문자
 *            char(2byte) => 0~65535
 *            ----------- ASCII vs UNICODE 차이점 (*********)
 *                        싱글코드    멀티코드
 *           논리
 *            boolean(1byte) -> true/ false만 저장이 가능
 *          -----------------------------------------------
 *          변수 활용 ( 프로그램 => 데이터 관리 )
 *          변수 활용 방법 => 연산자, 제어문
 *          연산자
 *           = 단항연산자 (++ , -- , ! , (데이터형)강제형변환 )
 *           = 이항연산자
 *             = +, - , * , / , %
 *             = ==, !=, < , <= , > , >=
 *             = && , ||
 *             = =, +=, -=
 *             
 *           = 삼항연산자
 *              = ? :
 *           => 자동형변환, 강제형변환
 *           => +는 문자열 결합
 *          -----------------------------------------------
 *          프로그램 흐름 제어
 *            => 오류가 발생 시 건너뛴다. => if
 *            => 반복수행 : for, while
 *            => 원하는 프로그램 수행 : if, switch
 *            => 제어문
 *              = ***조건문
 *                = 단일
 *                  if(조건문) => 조건문은 반드시 => 비교연산자, 부정연산자, 논리연산자
 *                  {
 *                    true일 때 수행
 *                  }
 *                = 선택
 *                  if(조건문)
 *                  {
 *                     조건이 true일 때
 *                  }
 *                  else
 *                  {
 *                     조건이 false일 때
 *                  }
 *                = 다중 => 여러 개의 조건문 중에 한 개 수행이 가능
 *                  if(조건문)
 *                  {
 *                     조건이 true일 때 수행
 *                     false일 때 
 *                        | else if 로 이동
 *                  }
 *                  else if(조건문)
 *                  {
 *                     조건이 true일 때 수행
 *                     false일 때 
 *                        | else로 이동
 *                  }
 *                  else { <= 생략 가능
 *                     조건이 true일 때 수행
 *                  }
 *              = 선택문
 *                 switch(정수,문자,문자열)
 *                 {
 *                   case 값:
 *                     처리문장
 *                     break;
 *                   case 값:
 *                     처리문장
 *                     break;
 *                   default:
 *                     처리문장 => 필요시에 사용
 *                 }
 *              = 반복문
 *               for
 *                     1     2    4
 *                for(초기값;조건식;증감식)
 *                {      3
 *                   반복 수행 문장
 *                }=>2번이 false면 종료
 *               while
 *               
 *                 초기값 1
 *                 while(조건식) 2
 *                 {
 *                   반복 수행 문장 3
 *                   증감식 4
 *                 } => 2번 조건식이 false면 종료
 * */
public class 제어문_반복문3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		float f = 10.5f; byte < char < int < long < float < double
//		                        short
		System.out.println(100L);
	}

}
