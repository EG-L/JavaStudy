/*
 *      page 3 => 자바 실행 환경
 *      
 *             javac(컴파일)          java(인터프리터)
 *      A.java ----------> A.Class ----------------> 한줄씩 읽어서 출력
 *                         (배포환경)
 *                            |
 *                         바이트 코드 ==> 모든 운영체제에 호환
 *                         
 *      page 22 => 들여쓰기
 *      page 23 => 주석 //(한줄 주석) => 번역이 안되는 부분 => 소스 설명
 *      ------------------------------------------------------
 *      약속
 *       => 1. 클래스명은 대소문으로 시작
 *          2. 변수선언은 소문자
 *          3. 상수는 전체 대문자 MAX_VALUE
 *          ----------------------
 *   2장 => 프로그램 기초 시작
 *   1) 25 page => 변수
 *      => 메모리에 한 개의 데이터를 저장하는 공간의 이름
 *         ---- 메모리는 주소에 대한 별칭 설정
 *         
 *   2) 형식
 *      데이터형(메모리 크기) 변수명;
 *      ---------------
 *      저장할 수 있는 공간 : 정수 / 실수 / 논리 / 문자 => 기본형
 *      정수를 저장할 수 있는 공간
 *      -------------------
 *      byte : -128~127(네트워크 송수신, 파일 읽기, 파일 쓰기, 사이트 검색)
 *         https://www.google.com/search?q=(%EC%9E%90%EB%B0%94) 
 *      int : -21억4천 ~ 21억4천(default) => 컴퓨터가 인식하는 숫자는 int
 *      long : 금융권, 빅데이터
 *      --------------------
 *         int와 long => L(l)
 *      
 *      
 *     실수를 저장하는 공간
 *        double (8byte) => 소수점 15자리 출력
 *        
 *     문자 저장하는 공간
 *        char (2byte) => 0~65535 => 고유 문자 번호 존재
 *             ------ 멀티 바이트 => 유니코드
 *     
 *     논리형 저장하는 공간
 *        boolean (1byte) => true/false만 저장이 가능
 *        
 *        
 *    --------------------------------------------- 30 page
 *    
 *    변수의 명명법(메소드,클래스,인터페이스..적용) : 식별자
 *    ---------
 *    1) 알파벳이나 한글로 시작
 *       ---- 호환성 문제로 대부분 알파벳 사용(대소문자 구분)
 *    2) 숫자 사용이 가능(앞에 사용할 수는 없다)
 *    3) 특수문자 사용 가능 ( _, $ )
 *    4) 키워드 사용 불가능(finals, int, boolean ...)
 *    5) 변수 공백 포함 불가능
 *    --------------------------------------------- 26 page
 *    
 *    38 page 연산자
 *    ------------
 *    단항연산자
 *      증감연산자 ( ++, -- )
 *      부정연산자 ( ! )
 *      형변환 연산자 (데이터형) -> 강제형변환(Downcasting)
 *    이항연산자
 *    	산술연산자 ( + , - , * , / , % )
 *               --- 문자열 결합 포함
 *      비교연산자 ( ==, !=, <, >, >=, <= )
 *      논리연산자 ( && , || )
 *      대입연산자 ( =, +=, -=,) 
 *    삼항연산자
 *    	(조건)?값1:값2 => if~else로 대체 가능
 *    
 *   --------------------------------------------------
 *   54page
 *   ------
 *   	자바에서 제공하는 제어문
 *   	조건문
 *        = 단일 조건문 : 독립적으로 사용 => 해당되는 조건이 많은 경우
 *            형식) if(조건문)
 *            	   {
 *                     조건이 true일 때 수행
 *            	   }
 *                 ==> false면 건너뛴다.
 *           56 page
 *        = 선택 조건문 : true와 false를 나눠서 처리
 *            형식) if(조건문) => 조건 (비교연산자, 부정연산자,논리연산자만 사용이 가능)
 *                 {
 *                    조건이 true일 때 수행
 *                 }
 *                 else if(조건문)
 *                 {
 *                    조건이 false일 때 수행
 *                 }
 *          58 page
 *        = 다중 조건문 : 조건문 여러개를 나열 => 해당 조건 1개만 수행이 가능하게 만든다
 *          형식)
 *             if(조건문)
 *             {
 *                조건이 true일 때 문장을 수행하고 종료
 *                조건이 false => else if 조건문으로 이동
 *             }
 *             else if(조건문)
 *             {
 *                조건이 true일 때 문장을 수행하고 종료
 *                조건이 false => else 조건문으로 이동
 *             }
 *             else
 *             {
 *             	  조건이 true일 때 문장을 수행하고 종료
 *             }
 *   	  = 선택문
 *   	
 *   	반복문
 *        = for문 : 횟수지정
 *        = while문 : 횟수가 없는 경우 => 파일종료, 오라클의 저장 데이터 읽기
 *        = do ~ while문 : 반드시 한번 이상 수행
 *   	반복제어문
 *      -------------------------------
 *        = break : 반복 종료(예외=> switch~case)
 *        = continue : 특정 부분을 제외
 *      ------------------------------- 반복문에서만 사용이 가능
 * */
public class 제어문_조건문_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(100000000000000000L);

	}

}
